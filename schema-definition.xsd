<xs:schema attributeFormDefault="unqualified" elementFormDefault="qualified" xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <xs:element name="yml_catalog">
    <xs:complexType>
      <xs:sequence>
        <xs:element name="shop">
          <xs:complexType>
            <xs:sequence>
              <xs:element type="xs:string" name="name"/>
              <xs:element type="xs:string" name="company"/>
              <xs:element type="xs:string" name="url"/>
              <xs:element type="xs:string" name="email"/>
              <xs:element type="xs:string" name="picture"/>
              <xs:element type="xs:string" name="description"/>
              <xs:element name="currencies">
                <xs:complexType>
                  <xs:sequence>
                    <xs:element name="currency">
                      <xs:complexType>
                        <xs:simpleContent>
                          <xs:extension base="xs:string">
                            <xs:attribute type="xs:string" name="id"/>
                            <xs:attribute type="xs:byte" name="rate"/>
                          </xs:extension>
                        </xs:simpleContent>
                      </xs:complexType>
                    </xs:element>
                  </xs:sequence>
                </xs:complexType>
              </xs:element>
              <xs:element name="categories">
                <xs:complexType>
                  <xs:sequence>
                    <xs:element name="category">
                      <xs:complexType>
                        <xs:simpleContent>
                          <xs:extension base="xs:string">
                            <xs:attribute type="xs:byte" name="id"/>
                          </xs:extension>
                        </xs:simpleContent>
                      </xs:complexType>
                    </xs:element>
                  </xs:sequence>
                </xs:complexType>
              </xs:element>
              <xs:element name="sets">
                <xs:complexType>
                  <xs:sequence>
                    <xs:element name="set" maxOccurs="unbounded" minOccurs="0">
                      <xs:complexType>
                        <xs:sequence>
                          <xs:element type="xs:string" name="name"/>
                          <xs:element type="xs:string" name="url"/>
                        </xs:sequence>
                        <xs:attribute type="xs:string" name="id" use="optional"/>
                      </xs:complexType>
                    </xs:element>
                  </xs:sequence>
                </xs:complexType>
              </xs:element>
              <xs:element name="offers">
                <xs:complexType>
                  <xs:sequence>
                    <xs:element name="offer" maxOccurs="unbounded" minOccurs="0">
                      <xs:annotation>
                        <xs:documentation>
                Оффер для врача - это связка "Врач"-"Клиника"-"Тип приема".
                При наличии у врача нескольких офферов нужно предоставить каждый из них отдельно.
                В таком случае URL разных офферов одного врача должны различаться незначащим cgi-параметром ?offer-id=...

            group_id - уникальный идентификтаор врача. нужен при наличии разных URL у одного человека. Целое число, не более 9 знаковМожно подменник аггрегатораМожно подменник аггрегатораМожно подменник аггрегатора</xs:documentation>
                      </xs:annotation>
                      <xs:complexType>
                        <xs:sequence>
                          <xs:element type="xs:string" name="name"/>
                          <xs:element type="xs:string" name="url">
                            <xs:annotation>
                              <xs:documentation>ФИО, именно в таком порядкеURL может совпадать ТОЛЬКО для офферов с одинаковым group_id.ФИО, именно в таком порядкеURL может совпадать ТОЛЬКО для офферов с одинаковым group_id.ФИО, именно в таком порядкеURL может совпадать ТОЛЬКО для офферов с одинаковым group_id.</xs:documentation>
                            </xs:annotation>
                          </xs:element>
                          <xs:element name="price">
                            <xs:annotation>
                              <xs:documentation>URL карточки врача. URL карточки врача. URL карточки врача. </xs:documentation>
                            </xs:annotation>
                            <xs:complexType>
                              <xs:simpleContent>
                                <xs:extension base="xs:short">
                                  <xs:attribute type="xs:string" name="from" use="optional"/>
                                </xs:extension>
                              </xs:simpleContent>
                            </xs:complexType>
                          </xs:element>
                          <xs:element type="xs:short" name="oldprice">
                            <xs:annotation>
                              <xs:documentation>Цена приема при записи в источнике фида, с учетом скидки Цена приема при записи в источнике фида, с учетом скидки Цена приема при записи в источнике фида, с учетом скидки </xs:documentation>
                            </xs:annotation>
                          </xs:element>
                          <xs:element type="xs:string" name="currencyId">
                            <xs:annotation>
                              <xs:documentation>Цена приема в клинике, должна быть не ниже priceЦена приема в клинике, должна быть не ниже priceЦена приема в клинике, должна быть не ниже price</xs:documentation>
                            </xs:annotation>
                          </xs:element>
                          <xs:element type="xs:string" name="sales_notes"/>
                          <xs:element type="xs:string" name="set-ids"/>
                          <xs:element type="xs:string" name="picture">
                            <xs:annotation>
                              <xs:documentation>специальности через запятуюспециальности через запятуюспециальности через запятую</xs:documentation>
                            </xs:annotation>
                          </xs:element>
                          <xs:element type="xs:string" name="description"/>
                          <xs:element type="xs:byte" name="categoryId"/>
                          <xs:element name="param" maxOccurs="unbounded" minOccurs="0">
                            <xs:annotation>
                              <xs:documentation>Пустых блоков param быть не должно. Если необязательное поле не заполнено, его нужно исключить из фидаДата начала карьеры, для подсчета стажаПринимает взрослых, от 18 летПринимает детей, до 18 летВозможность записаться на прием через сайт-поставщик фидаПустых блоков param быть не должно. Если необязательное поле не заполнено, его нужно исключить из фидаДата начала карьеры, для подсчета стажаПринимает взрослых, от 18 летПринимает детей, до 18 летВозможность записаться на прием через сайт-поставщик фидаПустых блоков param быть не должно. Если необязательное поле не заполнено, его нужно исключить из фидаДата начала карьеры, для подсчета стажаПринимает взрослых, от 18 летПринимает детей, до 18 летВозможность записаться на прием через сайт-поставщик фида</xs:documentation>
                            </xs:annotation>
                            <xs:complexType>
                              <xs:simpleContent>
                                <xs:extension base="xs:string">
                                  <xs:attribute type="xs:string" name="name" use="optional"/>
                                </xs:extension>
                              </xs:simpleContent>
                            </xs:complexType>
                          </xs:element>
                        </xs:sequence>
                        <xs:attribute type="xs:string" name="id" use="optional"/>
                        <xs:attribute type="xs:int" name="group_id" use="optional"/>
                      </xs:complexType>
                    </xs:element>
                  </xs:sequence>
                </xs:complexType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:sequence>
      <xs:attribute type="xs:string" name="date"/>
    </xs:complexType>
  </xs:element>
</xs:schema>